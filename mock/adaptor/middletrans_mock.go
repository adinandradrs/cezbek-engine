// Code generated by MockGen. DO NOT EDIT.
// Source: middletrans.go

// Package mock_adaptor is a generated GoMock package.
package adaptor

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMiddletransAdapter is a mock of MiddletransAdapter interface.
type MockMiddletransAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockMiddletransAdapterMockRecorder
}

// MockMiddletransAdapterMockRecorder is the mock recorder for MockMiddletransAdapter.
type MockMiddletransAdapterMockRecorder struct {
	mock *MockMiddletransAdapter
}

// NewMockMiddletransAdapter creates a new mock instance.
func NewMockMiddletransAdapter(ctrl *gomock.Controller) *MockMiddletransAdapter {
	mock := &MockMiddletransAdapter{ctrl: ctrl}
	mock.recorder = &MockMiddletransAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMiddletransAdapter) EXPECT() *MockMiddletransAdapterMockRecorder {
	return m.recorder
}

// WalletTransfer mocks base method.
func (m *MockMiddletransAdapter) WalletTransfer(inp *model.MiddletransWalletTransferRequest) (*model.MiddletransWalletTransferResponse, *model.TechnicalError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WalletTransfer", inp)
	ret0, _ := ret[0].(*model.MiddletransWalletTransferResponse)
	ret1, _ := ret[1].(*model.TechnicalError)
	return ret0, ret1
}

// WalletTransfer indicates an expected call of WalletTransfer.
func (mr *MockMiddletransAdapterMockRecorder) WalletTransfer(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WalletTransfer", reflect.TypeOf((*MockMiddletransAdapter)(nil).WalletTransfer), inp)
}
