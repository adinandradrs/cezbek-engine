// Code generated by MockGen. DO NOT EDIT.
// Source: gopaid.go

// Package mock_adaptor is a generated GoMock package.
package adaptor

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockGopaidAdapter is a mock of GopaidAdapter interface.
type MockGopaidAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockGopaidAdapterMockRecorder
}

// MockGopaidAdapterMockRecorder is the mock recorder for MockGopaidAdapter.
type MockGopaidAdapterMockRecorder struct {
	mock *MockGopaidAdapter
}

// NewMockGopaidAdapter creates a new mock instance.
func NewMockGopaidAdapter(ctrl *gomock.Controller) *MockGopaidAdapter {
	mock := &MockGopaidAdapter{ctrl: ctrl}
	mock.recorder = &MockGopaidAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGopaidAdapter) EXPECT() *MockGopaidAdapterMockRecorder {
	return m.recorder
}

// Topup mocks base method.
func (m *MockGopaidAdapter) Topup(inp *model.GopaidTopUpRequest) (*model.GopaidTopupResponse, *model.TechnicalError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Topup", inp)
	ret0, _ := ret[0].(*model.GopaidTopupResponse)
	ret1, _ := ret[1].(*model.TechnicalError)
	return ret0, ret1
}

// Topup indicates an expected call of Topup.
func (mr *MockGopaidAdapterMockRecorder) Topup(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Topup", reflect.TypeOf((*MockGopaidAdapter)(nil).Topup), inp)
}
