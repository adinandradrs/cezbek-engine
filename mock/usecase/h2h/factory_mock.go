// Code generated by MockGen. DO NOT EDIT.
// Source: factory.go

// Package mock_h2h is a generated GoMock package.
package h2h

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockFactoryProvider is a mock of FactoryProvider interface.
type MockFactoryProvider struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryProviderMockRecorder
}

// MockFactoryProviderMockRecorder is the mock recorder for MockFactoryProvider.
type MockFactoryProviderMockRecorder struct {
	mock *MockFactoryProvider
}

// NewMockFactoryProvider creates a new mock instance.
func NewMockFactoryProvider(ctrl *gomock.Controller) *MockFactoryProvider {
	mock := &MockFactoryProvider{ctrl: ctrl}
	mock.recorder = &MockFactoryProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactoryProvider) EXPECT() *MockFactoryProviderMockRecorder {
	return m.recorder
}

// SendCashback mocks base method.
func (m *MockFactoryProvider) SendCashback(inp *model.H2HSendCashbackRequest) (*model.TransactionResponse, *model.BusinessError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCashback", inp)
	ret0, _ := ret[0].(*model.TransactionResponse)
	ret1, _ := ret[1].(*model.BusinessError)
	return ret0, ret1
}

// SendCashback indicates an expected call of SendCashback.
func (mr *MockFactoryProviderMockRecorder) SendCashback(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCashback", reflect.TypeOf((*MockFactoryProvider)(nil).SendCashback), inp)
}
