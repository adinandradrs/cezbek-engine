// Code generated by MockGen. DO NOT EDIT.
// Source: onboard.go

// Package mock_partner is a generated GoMock package.
package partner

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockOnboardProvider is a mock of OnboardProvider interface.
type MockOnboardProvider struct {
	ctrl     *gomock.Controller
	recorder *MockOnboardProviderMockRecorder
}

// MockOnboardProviderMockRecorder is the mock recorder for MockOnboardProvider.
type MockOnboardProviderMockRecorder struct {
	mock *MockOnboardProvider
}

// NewMockOnboardProvider creates a new mock instance.
func NewMockOnboardProvider(ctrl *gomock.Controller) *MockOnboardProvider {
	mock := &MockOnboardProvider{ctrl: ctrl}
	mock.recorder = &MockOnboardProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOnboardProvider) EXPECT() *MockOnboardProviderMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockOnboardProvider) Authenticate(inp *model.OfficerAuthenticationRequest) (*model.OfficerAuthenticationResponse, *model.BusinessError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", inp)
	ret0, _ := ret[0].(*model.OfficerAuthenticationResponse)
	ret1, _ := ret[1].(*model.BusinessError)
	return ret0, ret1
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockOnboardProviderMockRecorder) Authenticate(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockOnboardProvider)(nil).Authenticate), inp)
}

// Validate mocks base method.
func (m *MockOnboardProvider) Validate(inp *model.OfficerValidationRequest) (*model.OfficerValidationResponse, *model.BusinessError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", inp)
	ret0, _ := ret[0].(*model.OfficerValidationResponse)
	ret1, _ := ret[1].(*model.BusinessError)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockOnboardProviderMockRecorder) Validate(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockOnboardProvider)(nil).Validate), inp)
}
