// Code generated by MockGen. DO NOT EDIT.
// Source: cashback.go

// Package mock_workflow is a generated GoMock package.
package workflow

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockCashbackProvider is a mock of CashbackProvider interface.
type MockCashbackProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCashbackProviderMockRecorder
}

// MockCashbackProviderMockRecorder is the mock recorder for MockCashbackProvider.
type MockCashbackProviderMockRecorder struct {
	mock *MockCashbackProvider
}

// NewMockCashbackProvider creates a new mock instance.
func NewMockCashbackProvider(ctrl *gomock.Controller) *MockCashbackProvider {
	mock := &MockCashbackProvider{ctrl: ctrl}
	mock.recorder = &MockCashbackProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCashbackProvider) EXPECT() *MockCashbackProviderMockRecorder {
	return m.recorder
}

// FindCashbackAmount mocks base method.
func (m *MockCashbackProvider) FindCashbackAmount(inp *model.FindCashbackRequest) (*model.FindCashbackResponse, *model.BusinessError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindCashbackAmount", inp)
	ret0, _ := ret[0].(*model.FindCashbackResponse)
	ret1, _ := ret[1].(*model.BusinessError)
	return ret0, ret1
}

// FindCashbackAmount indicates an expected call of FindCashbackAmount.
func (mr *MockCashbackProviderMockRecorder) FindCashbackAmount(inp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindCashbackAmount", reflect.TypeOf((*MockCashbackProvider)(nil).FindCashbackAmount), inp)
}
