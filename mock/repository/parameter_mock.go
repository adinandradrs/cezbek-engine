// Code generated by MockGen. DO NOT EDIT.
// Source: parameter.go

// Package mock_repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockParamPersister is a mock of ParamPersister interface.
type MockParamPersister struct {
	ctrl     *gomock.Controller
	recorder *MockParamPersisterMockRecorder
}

// MockParamPersisterMockRecorder is the mock recorder for MockParamPersister.
type MockParamPersisterMockRecorder struct {
	mock *MockParamPersister
}

// NewMockParamPersister creates a new mock instance.
func NewMockParamPersister(ctrl *gomock.Controller) *MockParamPersister {
	mock := &MockParamPersister{ctrl: ctrl}
	mock.recorder = &MockParamPersisterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParamPersister) EXPECT() *MockParamPersisterMockRecorder {
	return m.recorder
}

// FindByParamGroup mocks base method.
func (m *MockParamPersister) FindByParamGroup(g string) ([]*model.Parameter, *model.TechnicalError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByParamGroup", g)
	ret0, _ := ret[0].([]*model.Parameter)
	ret1, _ := ret[1].(*model.TechnicalError)
	return ret0, ret1
}

// FindByParamGroup indicates an expected call of FindByParamGroup.
func (mr *MockParamPersisterMockRecorder) FindByParamGroup(g interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByParamGroup", reflect.TypeOf((*MockParamPersister)(nil).FindByParamGroup), g)
}
