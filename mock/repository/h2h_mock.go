// Code generated by MockGen. DO NOT EDIT.
// Source: h2h.go

// Package mock_repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	model "github.com/adinandradrs/cezbek-engine/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockH2HPersister is a mock of H2HPersister interface.
type MockH2HPersister struct {
	ctrl     *gomock.Controller
	recorder *MockH2HPersisterMockRecorder
}

// MockH2HPersisterMockRecorder is the mock recorder for MockH2HPersister.
type MockH2HPersisterMockRecorder struct {
	mock *MockH2HPersister
}

// NewMockH2HPersister creates a new mock instance.
func NewMockH2HPersister(ctrl *gomock.Controller) *MockH2HPersister {
	mock := &MockH2HPersister{ctrl: ctrl}
	mock.recorder = &MockH2HPersisterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockH2HPersister) EXPECT() *MockH2HPersisterMockRecorder {
	return m.recorder
}

// Pricelists mocks base method.
func (m *MockH2HPersister) Pricelists() ([]model.H2HPricingsProjection, *model.TechnicalError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pricelists")
	ret0, _ := ret[0].([]model.H2HPricingsProjection)
	ret1, _ := ret[1].(*model.TechnicalError)
	return ret0, ret1
}

// Pricelists indicates an expected call of Pricelists.
func (mr *MockH2HPersisterMockRecorder) Pricelists() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pricelists", reflect.TypeOf((*MockH2HPersister)(nil).Pricelists))
}

// Providers mocks base method.
func (m *MockH2HPersister) Providers() ([]model.H2HProvider, *model.TechnicalError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Providers")
	ret0, _ := ret[0].([]model.H2HProvider)
	ret1, _ := ret[1].(*model.TechnicalError)
	return ret0, ret1
}

// Providers indicates an expected call of Providers.
func (mr *MockH2HPersisterMockRecorder) Providers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Providers", reflect.TypeOf((*MockH2HPersister)(nil).Providers))
}
